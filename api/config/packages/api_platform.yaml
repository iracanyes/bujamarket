parameters:
    # Adds a fallback VARNISH_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(VARNISH_URL): ''
    #env(APP_NAME): 'Buja Market'
    #env(APP_VERSION): '0.1'

api_platform:
    # The title of the API.
    title: Buja Market

    # The description of the API.
    description: 'Platforme de commerce en ligne. Place de march√© en ligne pour les produits provenant des grands lacs. '

    # The version of the API.
    version: 0.1

    # Set this to false if you want Webby to disappear.
    show_webby: true

    # Specify a name converter to use.
    name_converter: ~

    # Specify a path name generator to use.
    path_segment_name_generator: 'api_platform.path_segment_name_generator.underscore'

    # Allow using plain IDs for JSON format
    allow_plain_identifiers: false

    # Mapping
    mapping:
        # The list of paths with files or directories where the bundle will look for additional resource files
        paths: ['%kernel.project_dir%/src/Entity','%kernel.project_dir%/config/api_platform']           # yaml/xml directory configuration

    #resource_class_directories: ['%kernel.project_dir%/src/Entity','%kernel.project_dir%/config/api_platform']                # default configuration for annotations


    # Varnish integration, remove if unwanted
    http_cache:
        # Automatically generate etags for API responses.
        #etag: true
        invalidation:
            # To enable the tags-based cache invalidation system.
            enabled: true

            # URLs of the Varnish servers to purge using cache tags when a resource is updated.
            varnish_urls: ['%env(VARNISH_URL)%']

            # To pass options to the client charged with the request.
            request_options: []
        # Default value for the response max age.
        max_age: 0

        # Default value for the response shared (proxy) max age.
        shared_max_age: 3600

        # Default values of the "Vary" HTTP header.
        vary: ['Content-Type', 'Authorization']

        # To make all responses public by default.
        public: true

    # The list of exceptions mapped to their HTTP status code.
    exception_to_status:
        # With a status code.
        Symfony\Component\Serializer\Exception\ExceptionInterface: 400

        # Or with a constant defined in the 'Symfony\Component\HttpFoundation\Response' class.
        ApiPlatform\Core\Exception\InvalidArgumentException: !php/const Symfony\Component\HttpFoundation\Response::HTTP_BAD_REQUEST

        # ...

    # Mercure integration, remove if unwanted
    mercure:
        hub_url: '%env(MERCURE_SUBSCRIBE_URL)%'



    # Enable or Disable Doctrine ORM support
    doctrine:
        enabled: true

    doctrine_mongodb_odm:
        # To enable or disable Doctrine MongoDB ODM support.
        enabled: false

    eager_loading:
        # Enable or disable Eager Loading
        enabled: true

        # Fetch only partial data according to serialization groups.
        # If enabled, Doctrine ORM entities will not work as expected if any of the other fields are used.
        fetch_partial: false

        # Max number of joined relations before EagerLoading
        # throws a RuntimeException
        max_joins: 500

        # Force join on every relation
        # If disabled, it will only join relations having the EAGER fetch mode.
        force_eager: true

    #Enable the FOSUserBundle integration
    enable_fos_user: false

    # Enable the Nelmio API doc integration
    enable_nelmio_api_doc: false

    # Enable the Swagger documentation and export.
    enable_swagger: true

    # Enable Swagger UI
    enable_swagger_ui: true

    # Enable ReDoc.
    enable_re_doc: true

    # Enable the entrypoint
    enable_entrypoint: true

    # Enable the docs
    enable_docs: true

    # OAUTH
    #oauth:
        # To enable or disable oauth.
        #enabled: false

        # The oauth client ID
        #clientId: ''

        # The oauth client secret
        #clientSecret: ''

        # The oauth type
        #type: 'oauth2'

        # The oauth flow grant type
        #flow: 'application'

        # The oauth token URL
        #tokenUrl: '/oauth/v2/token'

        # The oauth authentication URL
        #authorizationUrl: '/oauth/v2/auth'

        # The oauth scopes
        #scopes: []

    graphql:
        enabled: false
        graphiql:
            enabled: true

    elasticsearch:
        # To enable or disable the ElasticSearch support
        enabled: false

        # The hosts to the Elasticsearch nodes:
        hosts: []

        # The mapping between resource class and indexes
        mapping: []

    # Swagger
    swagger:
        # The swagger api keys.
        api_keys: []

    # Collection
    collection:
        # The default order of results
        order: 'ASC'

        # The name of the query parameter to order results.
        order_parameter_name: 'order'

        pagination:
            # To enable or disable pagination for all resource collections
            enabled: true

            # To allow the client to enable or disable the pagination
            client_enabled: true

            # To allow the client to set the number of items per page
            client_items_per_page: false

            # The default number of items per page
            items_per_page: 20

            # The maximum number of items per page
            maximum_items_per_page: 20

            # The default name of the parameter handling the page number
            page_parameter_name: 'page'

            # The name of the query parameter to enable or disable
            enabled_parameter_name: 'pagination'

            # The name of query parameter to set the number of items per page
            items_per_page_parameter_name: 'itemsPerPage'

            # To allow partial pagination for all resource collections.
            # This improve performances by skipping the 'COUNT' query
            partial: true

            # To allow the client to enable or disable the partial
            client_partial: true

            # The name of the query parameter to enable or disable the partial pagination
            #pagination_parameter_name: 'partial' # Default value
            partial_parameter_name: 'partial'

    # The list of enabled formats. The first one will be the default.
    formats:
        jsonld:
            mime_types: ['application/ld+json']

        json:
            mime_types: ['application/json']

        html:
            mime_types: ['text/html']

    # The list of enabled error formats. The first one will be the default.
    error_formats:
        jsonproblem:
            mime_types: ['application/problem+json']

        jsonld:
            mime_types: ['application/ld+json']
