App\Entity\SupplierProduct:
    shortName: 'SupplierProduct'
    description: 'Products offer by the suppliers on this platform'
    iri: 'https://schema.ord/Offer'
    collectionOperations:
        get:
            method: 'GET'
            path: '/supplier_products.{_format}'
            requirements:
                _format: 'json\jsonld\html'
            defaults:
                _format: 'json'
            # host: 'localhost'
            #options:
            #    my_option: 'my_option_value'
            status: 200 # customize the HTTP status code to send
        supplier_products:
            method: 'GET'
            path: '/my_products'
            schemes: ['https']
            security: "is_granted('ROLE_SUPPLIER') and is_granted('IS_AUTHENTICATED_REMEMBERED')"
            controller: App\Action\SupplierProduct\GetMyProductsAction 
        product_suppliers:
            method: 'GET'
            path: '/products/{id}/all_suppliers'
            requirements:
                id: '\d+'
            #defaults:
            #    _api_receive: false
            schemes: [ 'https' ]
            controller: App\Action\Product\GetProductSuppliersAction
        post:
            method: 'POST'
            path: '/supplier_product/create'
            defaults:
                _api_receive: false
            security: "is_granted('ROLE_SUPPLIER') and is_granted('ROLE_PUBLISHER') and is_granted('IS_AUTHENTICATED_FULLY')"            
            schemes: ['https']
            controller: App\Action\SupplierProduct\CreateSupplierProductAction
            deserialize: false
            validation_groups: ['Default']
            openapi_context:
                requestBody:
                    content:
                        'multipart/form-data':
                            schema:
                                type: "object"
                                properties:
                                    product:
                                        images:
                                            file:
                                                type: string
                                                format: binary
                                        category:
                                            image:                                                   
                                                file:
                                                    type: string
                                                    format: binary
        post_update:
            method: 'POST'
            path: '/supplier_product/update/{id}'
            defaults:
                id: '\d+'
            security: "is_granted('ROLE_SUPPLIER') and is_granted('ROLE_PUBLISHER') and is_granted('IS_AUTHENTICATED_FULLY')"
            schemes: ['https']
            controller: App\Action\SupplierProduct\UpdateSupplierProductAction
            deserialize: false
            validation_groups: ['Default']
            openapi_context:
                requestBody:
                    content:
                        "multipart/form-data":
                            schema:
                                type: "object"
                                properties:
                                    product:
                                        images:
                                            file:
                                                type: string
                                                format: binary
                                        category:
                                            image:
                                                file:
                                                    type: string
                                                    format: binary
    itemOperations:
        get:
            method: 'GET'
            path: '/supplier_product/{id}.{_format}'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
            defaults:
                _format: 'json'
                _api_receive: false
            schemes: ['https']
            # host: 'localhost'
            #options:
            #    my_option: 'my_option_value'
            status: 200 # customize the HTTP status code to send
            controller: App\Action\SupplierProduct\GetSupplierProductAction
        put:
            method: 'PUT'
            path: '/supplier_product/{id}'
            requirements:
                id: '\d+'
            security: "is_granted('ROLE_SUPPLIER') and is_granted('ROLE_PUBLISHER') and is_granted('IS_AUTHENTICATED_FULLY')"
            schemes: ['https']
        delete:
            method: 'DELETE'
            path: '/supplier_product/{id}'
            requirements:
                id: '\d+'
            security: "is_granted('ROLE_SUPPLIER') and is_granted('ROLE_PUBLISHER') and is_granted('IS_AUTHENTICATED_FULLY')"
            schemes: ['https']
            controller: App\Action\SupplierProduct\DeleteAction
    subresourceOperations:
        supplier_get_subresource:
            method: 'GET'
            path: '/supplier_product/{id}/supplier.{_format}'
            defaults:
                _format: 'jsonld'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
        comments_get_subresource:
            method: 'GET'
            path: '/supplier_product/{id}/comments.{_format}'
            defaults:
                _format: 'jsonld'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
        images_get_subresource:
            method: 'GET'
            path: '/supplier_product/{id}/images.{_format}'
            defaults:
                _format: 'jsonld'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
