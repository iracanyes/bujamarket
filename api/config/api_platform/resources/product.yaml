App\Entity\Product:
    shortName: 'Product'
    description: 'Products sold on this platform'
    iri: 'https://schema.org/Product'
    attributes:
        pagination_items_per_page: 25
    collectionOperations:
        get:
            method: 'GET'
            path: '/products.{_format}'
            requirements:
                _format: 'json\jsonld\html'
            defaults:
                _format: 'jsonld'
            # host: 'localhost'
            #options:
            #    my_option: 'my_option_value'
            status: 200 # customize the HTTP status code to send
        getProductsWithImage:
            method: 'GET'
            path: '/products_with_images'
            defaults:
                _api_receive: false
                _api_respond: false
            schemes: ['https','http']
            controller: App\Controller\Product\GetProductsWithImageAction            
        getNames:
            method: 'GET'
            path: '/products_names.{_format}'
            schemes: ['https','http']  
            controller: App\Controller\Product\GetNamesAction
        search:
            method: 'GET'
            path: '/products/search'
            defaults:
                _api_receive: false
                #_api_respond: false
            schemes: ['https']
            controller: App\Controller\Product\SearchProductsAction
        post:
            method: 'POST'
            path: '/product/create'
            requirements:
                product: App\Entity\Product
            access_control: "is_granted('ROLE_SUPPLIER') and is_granted('IS_AUTHENTICATED_FULLY')"
            schemes: ['https']
            controller: App\Controller\Product\CreateProduct::class
    itemOperations:
        get:
            method: 'GET'
            path: '/product/{id}.{_format}'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
            defaults:
                _format: 'json'
            # host: 'localhost'
            schemes: ['https']
            status: 200 # customize the HTTP status code to send
            controller: App\Controller\Product\GetProductWithImageAction
        put:
            method: 'PUT'
            path: '/product/{id}'
            requirements:
                id: '\d+'
            access_control: 'is_granted("ROLE_SUPPLIER") and is_granted("IS_AUTHENTICATED_FULLY")'
            schemes: ['https']
        delete:
            method: 'DELETE'
            path: '/product/{id}'
            requirements:
                id: '\d+'
            access_control: 'is_granted("ROLE_ADMIN") and is_granted("IS_AUTHENTICATED_FULLY")'
            schemes: ['https']
        
        
