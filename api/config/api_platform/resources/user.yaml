App\Entity\User:
    shortName: 'User'
    description: 'User:"s of this platform'
    iri: 'https://schema.org/Person'
    collectionOperations:
        get:
            method: 'GET'
            path: '/users.{_format}'
            requirements:
                _format: 'json\jsonld\html'
            defaults:
                _format: 'json'
            # host: 'localhost'
            schemes: ['https']
            security: "is_granted('ROLE_ADMIN') and is_granted('IS_AUTHENTICATED_FULLY')"
            #options:
            #    my_option: 'my_option_value'
            status: 200 # customize the HTTP status code to send
        post:
            method: 'POST'
            path: '/subscribe/{token}'
            defaults:
                _api_receive: false
            schemes: ['https']
            controller: App\Controller\User\SubscribeMemberAction
        getProfile:
            method: 'POST'
            path: '/profile'
            defaults:
                _api_receive: false
                _api_response: false
            schemes: ['https']
            security: "is_granted('ROLE_MEMBER') and is_granted('IS_AUTHENTICATED_FULLY')"
            controller: App\Controller\User\GetProfileAction
        unlock_account:
            method: 'POST'
            path: '/unlock_account'
            defaults:
                _api_receive: false
            schemes: ['https']
            controller: App\Controller\User\UnlockAccountAction
        update_password:
            method: 'POST'
            path: '/update_password'
            defaults:
                _api_receive: false
            schemes: ['https']
            controller: App\Controller\User\UpdatePasswordAction
            security: "is_granted('ROLE_MEMBER') and is_granted('IS_AUTHENTICATED_FULLY')"
        update_profile:
            method: 'POST'
            path: '/profile/update'
            defaults:
                _api_receive: false
            schemes: ["https"]
            security: "is_granted('ROLE_MEMBER') and is_granted('IS_AUTHENTICATED_FULLY')"
            controller: App\Controller\User\UpdateProfileAction
        authorize_publishing:
            method: 'POST'
            path: '/authorize_publishing/{id}'
            requirements:
                id: '\d+'
            schemes: ['https']
            security: "is_granted('ROLE_ADMIN') and is_granted('IS_AUTHENTICATED_FULLY')"
            controller: App\Controller\User\AuthorizePublishingAction                          
    itemOperations:
        get:
            method: 'GET'
            path: '/user/{id}.{_format}'
            requirements:
                id: '\d+'
                _format: 'json\jsonld\html'
            defaults:
                _format: 'json'
            # host: 'localhost'
            schemes: ['https']
            security: "is_granted('ROLE_ADMIN') and is_granted('IS_AUTHENTICATED_FULLY')"
            #options:
            #    my_option: 'my_option_value'
            status: 200 # customize the HTTP status code to send        
        put:
            method: 'PUT'
            path: '/user/{id}'
            requirements:
                id: '\d+'
            security: 'is_granted("ROLE_ADMIN") and is_granted("IS_AUTHENTICATED_FULLY")'
            schemes: ['https']
        delete:
            method: 'DELETE'
            path: '/user/{id}'
            requirements:
                id: '\d+'
            security: 'is_granted("ROLE_ADMIN") and is_granted("IS_AUTHENTICATED_FULLY")'
            schemes: ['https']
            controller: App\Controller\User\DeleteUserAction
        unsubscribe:
            method: 'POST'
            path: '/unsubscribe'
            schemes: ['https']
            defaults:
                _api_receive: false
            security: "is_granted('ROLE_MEMBER') and is_granted('IS_AUTHENTICATED_FULLY')"
            controller: App\Controller\User\UnsubscribeAction
