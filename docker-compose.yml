version: '3.4'

x-cache:
  &cache  
  cache_from:
    - ${CONTAINER_REGISTRY_BASE}/php
    - ${CONTAINER_REGISTRY_BASE}/nginx
    - ${CONTAINER_REGISTRY_BASE}/varnish

services:
  php:
    image: ${CONTAINER_REGISTRY_BASE}/php
    build:
      context: ./api
      target: bjmkt_php
      <<: *cache
    depends_on:
      - db
    env_file:
      - ./.env.local 
    # Error : Untrusted Host 'localhost'
    #  - ./api/.env.local
    # Comment out these volumes in production
    volumes:
      - ./api:/srv/api:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw

  api:
    image: ${CONTAINER_REGISTRY_BASE}/nginx
    build:
      context: ./api
      target: bjmkt_nginx
      <<: *cache
    depends_on:
      - php
    env_file:
      - ./.env.local
      - ./api/.env.local
    # Comment out this volume in production
    volumes:
      - ./api/public:/srv/api/public:ro
    ports:
      - "8082:80"

  cache-proxy:
    image: ${CONTAINER_REGISTRY_BASE}/varnish
    build:
      context: ./api
      target: bjmkt_cache-proxy
      <<: *cache
    env_file:
      - ./.env.local
    depends_on:
      - api
    volumes:
      - ./api/docker/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
      - /usr/local/var/varnish:exec
    ports:
      - "8081:80"
  # MySQL
  db:
    image: mariadb:latest
    restart: always
    # Pour l'image MySQL
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - ./.env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?MYSQL_ROOT_PASSWORD is not set or empty}
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST:?MYSQL_ROOT_HOST is not set or empty}
      MYSQL_HOST: ${MYSQL_HOST:?MYSQL_HOST is not set or empty}
      MYSQL_USER: ${MYSQL_USER:?MYSQL_USER is not set or empty}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:?MYSQL_PASSWORD is not set or empty}
      MYSQL_DATABASE: ${MYSQL_DATABASE:?MYSQL_DATABASE is not set or empty}
      MYSQL_PORT: ${MYSQL_PORT:?MYSQL_PORT is not set or empty}
    volumes:
      - ./shared/mysql/db/data:/var/lib/mysql/data:rw
      - ./api/docker/db/conf.d/default.conf:/etc/mysql/conf.d/myConf.conf:rw
    # Port d'accés au container MySQL (3306) via le port interne d'accès à l'instance MySQL (3306)
    # Attention le port d'accés au container MySQL devra être modifié si une instance sur la machine locale utilise le même port 3306
    ports:
      - "3306:3306"
    
  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    domainname: localhost
    depends_on:
      - db
    env_file:
      - ./.env.local
    environment:
      - PMA_HOST=${PMA_HOST:-db}
      #- MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?MYSQL_ROOT_PASSWORD is not set or empty}  
      #- PMA_USER=${MYSQL_USER:?MYSQL_USER is not set or empty}
      #- PMA_PASSWORD=${MYSQL_PASSWORD:?MYSQL_PASSWORD is not set or empty}
      #- PMA_ABSOLUTE_URI=${PMA_ABSOLUTE_URI:PMA_ABSOLUTE_URI is not set or empty}
      #- PMA_PORT=${MYSQL_PORT:?MYSQL_PORT is not set or empty}
      - UPLOAD_LIMIT=${UPLOAD_LIMIT:-10M}
      - PMA_ARBITRARY=1  
    ports:
      - "8080:80"
    volumes:
      - ./shared/phpmyadmin/sessions

  mercure:
    # In production, you may want to use the managed version of Mercure, https://mercure.rocks
    image: dunglas/mercure
    env_file:
      - ./.env.local
    environment:
      # You should definitely change all these values in production
      - JWT_KEY=${JWT_KEY}
      - ALLOW_ANONYMOUS=1
      - CORS_ALLOWED_ORIGINS=*
      - PUBLISH_ALLOWED_ORIGINS=http://localhost:1337,https://localhost:1338
      - DEMO=1
    ports:
      - "1337:80"

  client:
    # Use a static website hosting service in production
    # See https://facebook.github.io/create-react-app/docs/deployment
    image: ${CONTAINER_REGISTRY_BASE}/client
    build:
      context: ./client
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/client
    env_file:
      - ./client/.env.local
      - ./.env.local
    volumes:
      - ./client:/usr/src/client:rw,cached
      - /usr/src/client/node_modules
    ports:
      - "80:3000"

  admin:
    # Use a static website hosting service in production
    # See https://facebook.github.io/create-react-app/docs/deployment
    image: ${CONTAINER_REGISTRY_BASE}/admin
    build:
      context: ./admin
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/admin
    env_file:
      - ./admin/.env.local
      - ./.env.local
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - /usr/src/admin/node_modules
    ports:
      - "81:3000"

  h2-proxy:
    # Don't use this proxy in prod
    build:
      context: ./h2-proxy
      args:
        cert_pass: ${CERT_PASS}
    env_file:
      - ./.env.local
    depends_on:
      - client
      - admin
      - phpmyadmin
      - api
      - cache-proxy
    ports:
      - "443:443"
      - "444:444"
      - "8383:8383"
      - "8443:8443"
      - "8444:8444"

